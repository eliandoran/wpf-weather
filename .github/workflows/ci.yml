name: Weather App Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        targetplatform: [x86, x64]
    runs-on: windows-latest
    env:
      App_Packages_Directory: packages
      Solution_Path: Weather.sln
      Test_Project_Path: Weather.Providers.Tests\Weather.Providers.Tests.csproj
      Wpf_Project_Path: Weather\Weather.csproj
      Actions_Allow_Unsecure_Commands: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0      
      - name: Use Nerdbank.GitVersioning to set version variables
        uses: aarnott/nbgv@v0.3
        with:
          setAllVars: true
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Install .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.302"
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.1
      - name: Execute Unit Tests
        run: dotnet test $env:Test_Project_Path      
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"wpf-weather" /o:"eliandoran" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"